  // Permission System

  async function permitSystem(args) {
    if (!await checkAdmin(userlow) && userlow !== channel) {
      return { success: false, reply: `You don't have the required permission to perform that command! Required: Channel Broadcaster or Above.` }
    }
    if (args.length == 0 || !/^add$|^remove$|^delete$|^check$/i.test(args[0]) || !args[1]) {
      return { success: false, reply: `Invalid Syntax! Example: "${prefix}permit {add|delete|remove|check} {user}"` }
    }
    var existingPerms = await db.get(`${channel}permits`)
    if (!existingPerms || existingPerms == '') {
      await db.set(`${channel}permits`, channel)
      existingPerms = await db.get(`${channel}permits`)
    }
    let [permitsArray, action, userPermit] = [existingPerms.split(' '), args[0].toLowerCase(), args[1].replace('@', '').toLowerCase()]
    if (action == 'add') {
      if (permitsArray.indexOf(userPermit) > -1) { return { success: false, reply: 'That user is alredy permitted in this channel!' } }
      permitsArray.push(userPermit)
      db.set(`${channel}permits`, permitsArray.join(' '))
      return { success: true, reply: `Successfully permitted @${userPermit} in #${channel}` }
    }
    else if (action == 'delete' || action == 'remove') {
      if (permitsArray.indexOf(userPermit) < 0) { return { success: false, reply: 'That user is not permitted in this channel!' } }
      permitsArray.splice(permitsArray.indexOf(userPermit), 1)
      db.set(`${channel}permits`, permitsArray.join(' '))
      return { success: true, reply: `Successfully removed @${userPermit}'s permissions in #${channel}` }
    }
    else if (action == 'check') {
      if (permitsArray.indexOf(userPermit) < 0) { return { success: true, reply: `@${userPermit} is not permitted in #${channel}!❌` } }
      else { return { success: true, reply: `@${userPermit} is permitted in #${channel}!✅` } }
    }
    else {
      return { success: true, reply: `An unknown error has occured. Please report this by suggesting this so I can fix it.` }
    }
  }

  async function checkPermitted(user) {
    if (await checkAdmin(user)) { return 'true' }
    if (user == channel) { return 'true' }
    var existingPerms = await db.get(`${channel}permits`)
    if (!existingPerms) { return 'false' }
    let permitsArray = existingPerms.split(' ')
    return permitsArray.indexOf(user) > -1 ? 'true' : 'false'
  }

  if (command === 'permit') {
    permitSystem(args).then(permitDetails => {
      client.me(channel, `${user} --> ${permitDetails.reply}`)
    })
  }

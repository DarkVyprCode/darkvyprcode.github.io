  async function cooldownReset(user) {
    if(cdrcooldown.has(userlow)) {
      return {
        success: false,
        case: "cdr_is_on_cooldown",
        beforeReset: null,
        afterReset: null,
        reply: "Your cdr is on cooldown. Wait 2 hours in between each reset."
      }
    }
    else if(!huntNammersCooldown.has(userlow)) {
      return {
        success: false,
        case: "user_is_not_on_cooldown",
        beforeReset: null,
        afterReset: null,
        reply: 'You are not on any cooldowns! Use "vb hunt" to get some nammers.'
      }
    }
    let userNammers = await db.get(`${user}nammers`)
    if(userNammers < 20) {
      return {
        success: false,
        case: "not_enough_nammers",
        beforeReset: +userNammers,
        afterReset: null,
        reply: `You need at least 20 nammers for a reset! You have ${userNammers}.`
      }
    }
    else {
      huntNammersCooldown.delete(user)
      cdrcooldown.add(user)
      setTimeout(() => { cdrcooldown.delete(userlow) }, 7200000)
      db.set(`${user}nammers`, +userNammers - 20)
      return {
        success: true,
        case: null,
        beforeReset: +userNammers,
        afterReset: +userNammers - 20,
        reply: `Your cooldown has been reset! (-20 nammers) | You now have ${+userNammers - 20} nammers. | Good luck! NekoPray (2 hr cooldown).`
      }
    }
  }

  if(command === 'cdr') {
    cooldownReset(userlow).then(cdrData => {
      if(!cdrData.success) {
        client.me(channel, `${user} --> ${cdrData.reply}`)
      }
      else {
        client.me(channel, `${user} --> ${cdrData.reply}`)
      }
    })
  }

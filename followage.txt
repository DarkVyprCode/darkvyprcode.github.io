  async function getFollowage(user, channel) {
    let followDetails = await axios.get(`https://api.ivr.fi/twitch/subage/${user}/${channel}`)
    let followUser = followDetails.data.username
    let followChannel = followDetails.data.channel
    let followedAt = followDetails.data.followedAt
    let timeSinceFollow = humanizeDuration(new Date(followDetails.data.followedAt) - new Date(), { units: ["y", "mo", "d", "h", "m", "s"], round: true, largest: 3 })
    let obj = {
      followUser: followUser,
      followChannel: followChannel,
      followedAt: followedAt,
      timeSinceFollow: timeSinceFollow
    }
    return obj
  }

  if(command === 'followage' || command === 'fa') {
    var userLookup = `${args[0]}`
    if(`${args[0]}` === 'undefined')
      var userLookup = userlow
      
    var channelLookup = `${args[1]}`
    if(`${args[1]}` === 'undefined')
      var channelLookup = channel
    
    getFollowage(userLookup, channelLookup)
      .catch(err => { client.me(channel, `${user} --> There was an error getting that user's followage! Make sure that the account exists, and you have spelt the channel and username correctly!`) })
      .then(function(followage) {
        if(`${followage.followedAt}` === 'null') {
          client.me(channel, `${user} --> @${followage.followUser} is not following @${followage.followChannel}`)
        }
        else {
          client.me(channel, `${user} --> @${followage.followUser} followed @${followage.followChannel} on ${new Date(followage.followedAt).toDateString()} which was ${followage.timeSinceFollow} ago.`)
        }
      })
  }
